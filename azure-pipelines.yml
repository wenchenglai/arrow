# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- script: |
    pwd
    ls 
  displayName: 'Show current contents'

- script: mkdir cpp/parquet_release
  displayName: 'Create the compilation output folder parquet_release under cpp folder'  

# CMake
- task: CMake@1
  inputs:
    workingDirectory: 'cpp/parquet_release'
    cmakeArgs: -DARROW_PARQUET=ON -DARROW_OPTIONAL_INSTALL=ON -DPARQUET_BUILD_EXAMPLES=ON -DARROW_BUILD_EXAMPLES=ON -DPARQUET_REQUIRE_ENCRYPTION=ON -DARROW_WITH_SNAPPY=ON ..

- script: |
    cd cpp/parquet_release
    make
  displayName: 'Make executables'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: '$(System.DefaultWorkingDirectory)/cpp/parquet_release/release/sqlite-reader'
    targetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: sqlite-reader-exe

- task: UniversalPackages@0
  displayName: Universal Publish
  inputs:
    command: publish
    publishDirectory: '$(Build.ArtifactStagingDirectory)'
    vstsFeedPublish: 'cpp'
    vstsFeedPackagePublish: 'sqlite-reader'
    packagePublishDescription: 'SQLite Reader Package'   

- script: |
    echo 'pwd'
    pwd
    echo 'cd cpp/parquet_release/release'
    cd cpp/parquet_release/release
    echo 'ls all content of current folder'
    ls
    echo 'variable System.DefaultWorkingDirectory'
    echo $(System.DefaultWorkingDirectory)      
    echo 'variable Build.SourcesDirectory'
    echo $(Build.SourcesDirectory)    
    echo 'variable Build.ArtifactStagingDirectory'
    echo $(Build.ArtifactStagingDirectory)      
    echo 'variable BuildConfiguration'
    echo $(BuildConfiguration)

    echo 'show content of staging directory'
    echo cd $(Build.ArtifactStagingDirectory)
    echo ls


  displayName: 'Show output folder content'     